// Code generated by MockGen. DO NOT EDIT.
// Source: example.go

// Package mock_example is a generated GoMock package.
package mock_example

import (
	gomock "github.com/golang/mock/gomock"
	example "github.com/sodefrin/cmpm/example"
	reflect "reflect"
)

// MockExample is a mock of Example interface
type MockExample struct {
	ctrl     *gomock.Controller
	recorder *MockExampleMockRecorder
}

// MockExampleMockRecorder is the mock recorder for MockExample
type MockExampleMockRecorder struct {
	mock *MockExample
}

// NewMockExample creates a new mock instance
func NewMockExample(ctrl *gomock.Controller) *MockExample {
	mock := &MockExample{ctrl: ctrl}
	mock.recorder = &MockExampleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockExample) EXPECT() *MockExampleMockRecorder {
	return m.recorder
}

// Go mocks base method
func (m *MockExample) Go(arg0 example.AAA) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Go", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Go indicates an expected call of Go
func (mr *MockExampleMockRecorder) Go(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Go", reflect.TypeOf((*MockExample)(nil).Go), arg0)
}
